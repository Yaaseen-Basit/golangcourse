package main

import (
	"bufio"
	"fmt"
	"io/ioutil"
	"strings"
)

type Name struct {
	FName string `json:"fname"`
	LName string `json:"lname"`
}

var People []Name

func collectDataFromFile(fileName string) {
	var count int64 = 0
	// read file
	bytes, err := ioutil.ReadFile(fileName)
	if err != nil {
		fmt.Println("[ERROR] unable to read file: ", err)
	}

	// get access to line
	fmt.Println("[INFO] Reading your file . . .")
	scanner := bufio.NewScanner(strings.NewReader(string(bytes)))
	for scanner.Scan() {
		// adding line to struct
		var name Name
		line := strings.Split(scanner.Text(), " ")
		name.FName = line[0]
		name.LName = line[1]

		People = append(People, name)
		count += 1
	}

	fmt.Printf("[INFO] Total line(s) readed: %v\n", count)
	fmt.Println("----------------------------------------------------------")

}

func main() {
	var fileName string

	fmt.Printf("[INPUT] Enter file name:=> ")
	_, err := fmt.Scanf("%s", &fileName)
	if err != nil {
		fmt.Println("something went wrong: ", err)
	}

	collectDataFromFile(fileName)
	fmt.Printf("[INFO]\t\t\t FILE DATA \t\t\t\n")
	fmt.Println("----------------------------------------------------------")

	for _, name := range People {
		fmt.Printf("\tfirst_name: %v, \tlast_name: %v \n", name.FName, name.LName)
	}
}